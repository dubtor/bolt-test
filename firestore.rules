rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user owns the document
    function isOwner(resource) {
      return isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // Helper function to check if data is complete for publishing
    function isValidClinic(data) {
      return data.name != null && data.name != '' &&
             data.slug != null && data.slug != '' &&  // Check for slug
             data.description != null && data.description != '' &&
             data.address != null &&
             data.address.street != null && data.address.street != '' &&
             data.address.city != null && data.address.city != '' &&
             data.address.country != null && data.address.country != '' &&
             data.services != null && data.services.size() > 0 &&
             data.doctors != null && data.doctors.size() >= 0;
    }

    match /clinics/{clinicId} {
      // Allow reading published clinics or if user owns the clinic
      allow read: if (
        // Allow reading published clinics
        resource.data.status == 'published' ||
        // Allow clinic owners to read their own clinics
        isOwner(resource)
      );

      // Allow querying clinics
      allow list: if (
        // Allow listing with reasonable limit
        request.query.limit <= 50 && (
          // Allow listing published clinics
          resource.data.status == 'published' ||
          // Allow users to list their own clinics
          (isAuthenticated() && request.auth.uid == resource.data.userId)
        )
      );
      
      // Allow authenticated users to create clinics with matching userId
      allow create: if isAuthenticated() 
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.status == 'draft';
      
      // Allow updates only by the clinic owner and enforce data completeness for publishing
      allow update: if isOwner(resource) && (
        // Allow updating to published only if data is complete
        (request.resource.data.status == 'published' && isValidClinic(request.resource.data)) ||
        // Always allow updating while in draft status
        request.resource.data.status == 'draft'
      );
      
      // Allow deletes only by the clinic owner
      allow delete: if isOwner(resource);
    }
  }
}
